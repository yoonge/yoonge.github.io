<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[zy.i.tw]]></title>
  <subtitle><![CDATA[时光静好，与君语；细水流年，与君同；繁华落尽，与君老。]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://zyi.tw/"/>
  <updated>2015-11-27T09:11:11.831Z</updated>
  <id>http://zyi.tw/</id>
  
  <author>
    <name><![CDATA[Yoonge]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Nodejs Update]]></title>
    <link href="http://zyi.tw/2015/07/13/nodejs-update/"/>
    <id>http://zyi.tw/2015/07/13/nodejs-update/</id>
    <published>2015-07-13T09:49:22.000Z</published>
    <updated>2015-11-27T09:11:11.831Z</updated>
    <content type="html"><![CDATA[<p>更新已经安装的 npm 库</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm update –g</span><br></pre></td></tr></table></figure>
<p>更新 Nodejs 自身（非 windows ）</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install –g n</span><br><span class="line">n stable</span><br></pre></td></tr></table></figure>
<p>注：n 为 Nodejs 版本管理模块。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>更新已经安装的 npm 库</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="]]>
    </summary>
    
      <category term="nodejs" scheme="http://zyi.tw/tags/nodejs/"/>
    
      <category term="Nodejs" scheme="http://zyi.tw/categories/Nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac OS X 下开启 root 用户]]></title>
    <link href="http://zyi.tw/2015/04/03/mac-os-x-root/"/>
    <id>http://zyi.tw/2015/04/03/mac-os-x-root/</id>
    <published>2015-04-03T10:50:38.000Z</published>
    <updated>2015-11-27T09:19:17.692Z</updated>
    <content type="html"><![CDATA[<p>在 Mac OS X 下使用 su 指令想暂时切入 root 用户下，输入密码会发现无法登陆 root 用户。<br>这是因为默认情况下 root 用户密码未被设置，需要先用 passwd 命令来设置一下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ passwd root</span><br><span class="line"></span><br><span class="line">Changing password <span class="keyword">for</span> root.</span><br><span class="line">Old Password:</span><br><span class="line">New Password:</span><br><span class="line">Retype New Password:</span><br><span class="line">passwd: authentication token failure</span><br></pre></td></tr></table></figure>
<p>提示失败，试试 sudo ：</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo passwd root</span><br></pre></td></tr></table></figure>
<p>好了，这时再用 su ：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ su</span><br><span class="line">Password:</span><br></pre></td></tr></table></figure>
<p>搞定。<br>使用 root 完毕，用 exit 退出即可。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在 Mac OS X 下使用 su 指令想暂时切入 root 用户下，输入密码会发现无法登陆 root 用户。<br>这是因为默认情况下 root 用户密码未被设置，需要先用 passwd 命令来设置一下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ passwd root</span><br><span class="line"></span><br><span class="line">Changing password <span class="keyword">for</span> root.</span><br><span class="line">Old Password:</span><br><span class="line">New Password:</span><br><span class="line">Retype New Password:</span><br><span class="line">passwd: authentication token failure</span><br></pre></td></tr></table></figure>
<p>提示失败，试试 sudo ：</p>]]>
    
    </summary>
    
      <category term="mac" scheme="http://zyi.tw/tags/mac/"/>
    
      <category term="os x" scheme="http://zyi.tw/tags/os-x/"/>
    
      <category term="Unix" scheme="http://zyi.tw/categories/Unix/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[云南之旅]]></title>
    <link href="http://zyi.tw/2015/03/18/yunnan-journey/"/>
    <id>http://zyi.tw/2015/03/18/yunnan-journey/</id>
    <published>2015-03-18T07:53:20.000Z</published>
    <updated>2015-11-27T09:11:51.306Z</updated>
    <content type="html"><![CDATA[<p>测试传图</p>
<p><img src="/images/20150318.jpg" alt="云南之旅"></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>测试传图</p>
<p><img src="/images/20150318.jpg" alt="云南之旅"></p>
]]>
    </summary>
    
      <category term="云南" scheme="http://zyi.tw/tags/%E4%BA%91%E5%8D%97/"/>
    
      <category term="旅行" scheme="http://zyi.tw/tags/%E6%97%85%E8%A1%8C/"/>
    
      <category term="Notes" scheme="http://zyi.tw/categories/Notes/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git 远程、本地分支操作]]></title>
    <link href="http://zyi.tw/2014/11/20/git-branch/"/>
    <id>http://zyi.tw/2014/11/20/git-branch/</id>
    <published>2014-11-20T10:26:48.000Z</published>
    <updated>2015-11-27T10:20:48.306Z</updated>
    <content type="html"><![CDATA[<h2 id="查看本地分支">查看本地分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">* hexo</span><br><span class="line">  master</span><br></pre></td></tr></table></figure>
<h2 id="查看本地和远程分支">查看本地和远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git branch <span class="operator">-a</span></span><br><span class="line">* hexo</span><br><span class="line">  master</span><br><span class="line">  remotes/origin/hexo</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure>
<h2 id="创建本地分支_test">创建本地分支 test</h2><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git branch <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">$ git branch</span><br><span class="line">* hexo</span><br><span class="line">  master</span><br><span class="line">  <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<h2 id="切换到本地分支_test">切换到本地分支 test</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout <span class="built_in">test</span></span><br><span class="line">Switched to branch <span class="string">'test'</span></span><br><span class="line"></span><br><span class="line">$ git branch</span><br><span class="line">  hexo</span><br><span class="line">  master</span><br><span class="line">* <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<h2 id="把本地分支_test_推送到远程分支">把本地分支 test 推送到远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin <span class="built_in">test</span></span><br><span class="line">Total <span class="number">0</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">To https://github.com/yoonge/yoonge.git</span><br><span class="line">* [new branch]    <span class="built_in">test</span> -&gt; <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">$ git branch <span class="operator">-a</span></span><br><span class="line">  hexo</span><br><span class="line">  master</span><br><span class="line">* <span class="built_in">test</span></span><br><span class="line">  remotes/origin/hexo</span><br><span class="line">  remotes/origin/master</span><br><span class="line">  remotes/origin/<span class="built_in">test</span></span><br></pre></td></tr></table></figure>
<h2 id="同步本地远程分支">同步本地远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch origin</span><br></pre></td></tr></table></figure>
<h2 id="提交本地分支数据到远程分支">提交本地分支数据到远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin <span class="built_in">test</span>:<span class="built_in">test</span>   <span class="comment"># &lt;local_branch_name&gt;:&lt;remote_branch_name&gt;</span></span><br><span class="line">Everything up-to-date</span><br></pre></td></tr></table></figure>
<p>如果当前处于 test 分支下，也可以直接：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push</span><br></pre></td></tr></table></figure>
<h2 id="删除远程分支_test">删除远程分支 test</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin :<span class="built_in">test</span></span><br><span class="line">To https://github.com/yoonge/yoonge.git</span><br><span class="line">- [deleted]    <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">$ git branch <span class="operator">-a</span></span><br><span class="line">  hexo</span><br><span class="line">  master</span><br><span class="line">* <span class="built_in">test</span></span><br><span class="line">  remotes/origin/hexo</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure>
<h3 id="删除本地分支_test">删除本地分支 test</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout hexo</span><br><span class="line">Switched to branch <span class="string">'hexo'</span></span><br><span class="line"></span><br><span class="line">$ git branch <span class="operator">-d</span> <span class="built_in">test</span></span><br><span class="line">Deleted branch <span class="built_in">test</span> (was <span class="number">131</span>eba3).</span><br><span class="line"></span><br><span class="line">$ git brach</span><br><span class="line">* hexo</span><br><span class="line">  master</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="查看本地分支">查看本地分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">* hexo</span><br><span class="line">  master</span><br></pre></td></tr></table></figure>
<h2 id="查看本地和远程分支">查看本地和远程分支</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git branch <span class="operator">-a</span></span><br><span class="line">* hexo</span><br><span class="line">  master</span><br><span class="line">  remotes/origin/hexo</span><br><span class="line">  remotes/origin/master</span><br></pre></td></tr></table></figure>
<h2 id="创建本地分支_test">创建本地分支 test</h2>]]>
    
    </summary>
    
      <category term="git" scheme="http://zyi.tw/tags/git/"/>
    
      <category term="Notes" scheme="http://zyi.tw/categories/Notes/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vim 命令大全]]></title>
    <link href="http://zyi.tw/2014/09/29/vim-command/"/>
    <id>http://zyi.tw/2014/09/29/vim-command/</id>
    <published>2014-09-29T05:44:31.000Z</published>
    <updated>2015-11-20T10:22:31.379Z</updated>
    <content type="html"><![CDATA[<h2 id="命令历史">命令历史</h2><p>以 : 和 / 开头的命令都有历史纪录，可以首先键入 : 或 / 然后按上下箭头来选择某个历史命令。</p>
<h2 id="启动_vim">启动 vim</h2><p>在命令行窗口中输入以下命令即可</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim    <span class="comment"># 直接启动 vim</span></span><br><span class="line">vim filename    <span class="comment"># 打开 vim 并创建名为 filename 的文件</span></span><br></pre></td></tr></table></figure>
<h2 id="文件命令">文件命令</h2><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim file    <span class="comment"># 打开单个文件</span></span><br><span class="line">vim file1 file2 file3 ...    <span class="comment"># 同时打开多个文件</span></span><br><span class="line">:open file    <span class="comment"># 在 vim 窗口中打开一个新文件</span></span><br><span class="line">:split file    <span class="comment"># 在新窗口中打开文件</span></span><br><span class="line">:bn    <span class="comment"># 切换到下一个文件</span></span><br><span class="line">:bp    <span class="comment"># 切换到上一个文件</span></span><br><span class="line">:args    <span class="comment"># 查看当前打开的文件列表，当前正在编辑的文件会用 [] 括起来</span></span><br></pre></td></tr></table></figure>
<p>打开远程文件，比如 ftp 或者 share folder</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:e ftp://<span class="number">192.168</span>.<span class="number">10.76</span>/abc.txt</span><br><span class="line">:e \\qadrive\<span class="built_in">test</span>\<span class="number">1</span>.txt</span><br></pre></td></tr></table></figure>
<h2 id="Vim_的模式">Vim 的模式</h2><p>正常模式    （按 Esc 或 Ctrl + [ 进入） —— 左下角显示文件名或为空<br>插入模式    （按 i 键进入） —— 左下角显示 –INSERT–<br>可视模式    （按 v 或 V 进入） —— 左下角显示 –VISUAL–</p>
<h2 id="导航命令">导航命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%    <span class="comment"># 括号匹配</span></span><br></pre></td></tr></table></figure>
<h2 id="插入命令">插入命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">i    <span class="comment"># 在当前位置生前插入</span></span><br><span class="line">I    <span class="comment"># 在当前行首插入</span></span><br><span class="line">a    <span class="comment"># 在当前位置后插入</span></span><br><span class="line">A    <span class="comment"># 在当前行尾插入</span></span><br><span class="line">o    <span class="comment"># 在当前行之后插入一行</span></span><br><span class="line">O    <span class="comment"># 在当前行之前插入一行</span></span><br></pre></td></tr></table></figure>
<h2 id="查找命令">查找命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/text    <span class="comment"># 查找 text ，按 n 健查找下一个，按 N 健查找前一个</span></span><br><span class="line">?text    <span class="comment"># 查找 text ，反向查找，按 n 健查找下一个，按 N 健查找前一个</span></span><br></pre></td></tr></table></figure>
<p>vim 中有一些特殊字符在查找时需要转义    .*[]^%/?~$</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">set</span> ignorecase    <span class="comment"># 忽略大小写的查找</span></span><br><span class="line">:<span class="built_in">set</span> noignorecase    <span class="comment"># 不忽略大小写的查找</span></span><br></pre></td></tr></table></figure>
<p>查找很长的词，如果一个词很长，键入麻烦，可以将光标移动到该词上，按 * 或 # 键即可以该单词进行搜索，* 相当于 / 搜索。而 # 命令相当于 ? 搜索。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">set</span> hlsearch    <span class="comment"># 高亮搜索结果，所有结果都高亮显示，而不是只显示一个匹配</span></span><br><span class="line">:<span class="built_in">set</span> nohlsearch    <span class="comment"># 关闭高亮搜索显示</span></span><br><span class="line">:nohlsearch    <span class="comment"># 关闭当前的高亮显示，如果再次搜索或者按下 n 或 N 键，则会再次高亮</span></span><br><span class="line">:<span class="built_in">set</span> incsearch    <span class="comment"># 逐步搜索模式，对当前键入的字符进行搜索而不必等待键入完成</span></span><br><span class="line">:<span class="built_in">set</span> wrapscan    <span class="comment"># 重新搜索，在搜索到文件头或尾时，返回继续搜索，默认开启</span></span><br></pre></td></tr></table></figure>
<h2 id="替换命令">替换命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ra    <span class="comment"># 将当前字符替换为 a，当期字符即光标所在字符</span></span><br><span class="line">s/old/new/    <span class="comment"># 用 old 替换 new，替换当前行的第一个匹配</span></span><br><span class="line">s/old/new/g    <span class="comment"># 用 old 替换 new，替换当前行的所有匹配</span></span><br><span class="line">%s/old/new/    <span class="comment"># 用 old 替换 new，替换所有行的第一个匹配</span></span><br><span class="line">%s/old/new/g    <span class="comment"># 用 old 替换 new，替换整个文件的所有匹配</span></span><br><span class="line">:<span class="number">10</span>,<span class="number">20</span> s/^/ /g    <span class="comment"># 在第 10 行至第 20 行每行前面加四个空格，用于缩进</span></span><br><span class="line">ddp    <span class="comment"># 交换光标所在行和其下紧邻的一行</span></span><br></pre></td></tr></table></figure>
<h2 id="移动命令">移动命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">h    <span class="comment"># 左移一个字符</span></span><br><span class="line">l    <span class="comment"># 右移一个字符，这个命令很少用，一般用 w 代替</span></span><br><span class="line">k    <span class="comment"># 上移一个字符</span></span><br><span class="line">j    <span class="comment"># 下移一个字符</span></span><br></pre></td></tr></table></figure>
<p>以上四个命令可以配合数字使用，比如 20j 就是向下移动 20 行，5h 就是向左移动 5 个字符，在 vim 中，很多命令都可以配合数字使用，比如删除 10 个字符 10x，在当前位置后插入 3 个！，3a！<esc>，这里的 Esc 是必须的，否则命令不生效。</esc></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">w    <span class="comment"># 向前移动一个单词（光标停在单词首部），如果已到行尾，则转至下一行行首。此命令快，可以代替 l 命令</span></span><br><span class="line">b    <span class="comment"># 向后移动一个单词 2b 向后移动 2 个单词</span></span><br><span class="line">e    <span class="comment"># 同 w ，只不过是光标停在单词尾部</span></span><br><span class="line">ge    <span class="comment"># 同 b ，光标停在单词尾部</span></span><br><span class="line">^    <span class="comment"># 移动到本行第一个非空白字符上</span></span><br><span class="line"><span class="number">0</span> ( 数字 <span class="number">0</span> )    <span class="comment"># 移动到本行第一个字符上</span></span><br><span class="line">&lt;HOME&gt;    <span class="comment"># 移动到本行第一个字符。同 0 健</span></span><br><span class="line">$    <span class="comment"># 移动到行尾 3$ 移动到下面 3 行的行尾</span></span><br><span class="line">gg    <span class="comment"># 移动到文件头    gg = [[</span></span><br><span class="line">G ( <span class="built_in">shift</span> + g )    <span class="comment"># 移动到文件尾    G = ]]</span></span><br><span class="line">f ( find )    <span class="comment"># 命令也可以用于移动，fx 将找到光标后第一个为 x 的字符，3fd 将找到第三个为 d 的字符</span></span><br><span class="line">F    <span class="comment"># 同 f ，反向查找</span></span><br></pre></td></tr></table></figure>
<p>跳到指定行，冒号 + 行号，回车，比如跳到 240 行就是 :240 回车。另一个方法是行号 +G ，比如 230G 跳到 230 行。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Ctrl + e    <span class="comment"># 向下滚动一行</span></span><br><span class="line">Ctrl + y    <span class="comment"># 向上滚动一行</span></span><br><span class="line">Ctrl + d    <span class="comment"># 向下滚动半屏</span></span><br><span class="line">Ctrl + u    <span class="comment"># 向上滚动半屏</span></span><br><span class="line">Ctrl + f    <span class="comment"># 向下滚动一屏</span></span><br><span class="line">Ctrl + b    <span class="comment"># 向上滚动一屏</span></span><br></pre></td></tr></table></figure>
<h2 id="撤销和重做">撤销和重做</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">u    <span class="comment"># 撤销 ( Undo )</span></span><br><span class="line">U    <span class="comment"># 撤销对整行的操作</span></span><br><span class="line">Ctrl + r    <span class="comment"># 重做 ( Redo ) ，即撤销的撤销</span></span><br></pre></td></tr></table></figure>
<h2 id="删除命令">删除命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">x    <span class="comment"># 删除当前字符</span></span><br><span class="line"><span class="number">3</span>x    <span class="comment"># 删除当前光标开始向后三个字符</span></span><br><span class="line">X    <span class="comment"># 删除当前字符的前一个字符    X = dh</span></span><br><span class="line">dl    <span class="comment"># 删除当前字符    dl = x</span></span><br><span class="line">dh    <span class="comment"># 删除前一个字符</span></span><br><span class="line">dd    <span class="comment"># 删除当前行</span></span><br><span class="line">dj    <span class="comment"># 删除上一行</span></span><br><span class="line">dk    <span class="comment"># 删除下一行</span></span><br><span class="line"><span class="number">10</span>d    <span class="comment"># 删除当前行开始的 10 行</span></span><br><span class="line">D    <span class="comment"># 删除当前字符至行尾    D = d$</span></span><br><span class="line">d$    <span class="comment"># 删除当前字符之后的所有字符（本行）</span></span><br><span class="line">kdgg    <span class="comment"># 删除当前行之前所有行（不包括当前行）</span></span><br><span class="line">jdG ( jd <span class="built_in">shift</span> + g )    <span class="comment"># 删除当前行之后所有行（不包括当前行）</span></span><br><span class="line"></span><br><span class="line">:<span class="number">1</span>,<span class="number">10</span>d    <span class="comment"># 删除 1-10 行</span></span><br><span class="line">:<span class="number">11</span>,<span class="variable">$d</span>    <span class="comment"># 删除 11 行及以后所有的行</span></span><br><span class="line">:<span class="number">1</span>,<span class="variable">$d</span>    <span class="comment"># 删除所有行</span></span><br><span class="line">J ( <span class="built_in">shift</span> + j )    <span class="comment"># 删除两行之间的空行，实际上是合并两行</span></span><br></pre></td></tr></table></figure>
<h2 id="拷贝和粘贴">拷贝和粘贴</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yy    <span class="comment"># 拷贝当前行</span></span><br><span class="line">nyy    <span class="comment"># 拷贝当前后开始的 n 行，比如 2yy 拷贝当前行及其下一行</span></span><br><span class="line">p    <span class="comment"># 在当前光标后粘贴，如果之前使用了 yy 命令来复制一行，那么就在当前行的下一行粘贴</span></span><br><span class="line"><span class="built_in">shift</span> + p    <span class="comment"># 在当前行前粘贴</span></span><br><span class="line"></span><br><span class="line">:<span class="number">1</span>,<span class="number">10</span> co <span class="number">20</span>    <span class="comment"># 将 1-10 行插入到第 20 行之后</span></span><br><span class="line">:<span class="number">1</span>,$ co $    <span class="comment"># 将整个文件复制一份并添加到文件尾部</span></span><br></pre></td></tr></table></figure>
<p>正常模式下按 v（逐字）或 V（逐行）进入可视模式，然后用 jklh 命令移动即可选择某些行或字符，再按 y 即可复制。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ddp    <span class="comment"># 交换当前行和其下一行</span></span><br><span class="line">xp    <span class="comment"># 交换当前字符和其后一个字符</span></span><br></pre></td></tr></table></figure>
<h2 id="剪切命令">剪切命令</h2><p>正常模式下按 v（逐字）或 V（逐行）进入可视模式，然后用 jklh 命令移动即可选择某些行或字符，再按 d 即可剪切。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ndd    <span class="comment"># 剪切当前行之后的 n 行。利用 p 命令可以对剪切的内容进行粘贴</span></span><br><span class="line">:<span class="number">1</span>,<span class="number">10</span>d    <span class="comment"># 将 1-10 行剪切。利用 p 命令可将剪切后的内容进行粘贴</span></span><br><span class="line">:<span class="number">1</span>, <span class="number">10</span> m <span class="number">20</span>    <span class="comment"># 将第 1-10 行移动到第 20 行之后</span></span><br></pre></td></tr></table></figure>
<h2 id="退出命令">退出命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:wq    <span class="comment"># 保存并退出</span></span><br><span class="line">ZZ    <span class="comment"># 保存并退出</span></span><br><span class="line">:q!    <span class="comment"># 强制退出并忽略所有更改</span></span><br><span class="line">:e!    <span class="comment"># 放弃所有修改，并打开原来文件</span></span><br></pre></td></tr></table></figure>
<h2 id="窗口命令">窗口命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">:split or new    <span class="comment"># 打开一个新窗口，光标停在顶层的窗口上</span></span><br><span class="line">:split file or :new file    <span class="comment"># 用新窗口打开文件</span></span><br><span class="line">split <span class="comment"># 打开的窗口都是横向的，使用 vsplit 可以纵向打开窗口</span></span><br><span class="line"></span><br><span class="line">Ctrl + ww    <span class="comment"># 移动到下一个窗口</span></span><br><span class="line">Ctrl + wj    <span class="comment"># 移动到下方的窗口</span></span><br><span class="line">Ctrl + wk    <span class="comment"># 移动到上方的窗口</span></span><br></pre></td></tr></table></figure>
<h2 id="关闭窗口">关闭窗口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:close    <span class="comment"># 最后一个窗口不能使用此命令，可以防止意外退出 vim</span></span><br><span class="line">:q    <span class="comment"># 如果是最后一个被关闭的窗口，那么将退出 vim</span></span><br><span class="line">ZZ    <span class="comment"># 保存并退出</span></span><br><span class="line">:only    <span class="comment"># 关闭所有窗口，只保留当前窗口</span></span><br></pre></td></tr></table></figure>
<h2 id="录制宏">录制宏</h2><p>按 q 键加任意字母开始录制，再按 q 键结束录制（这意味着 vim 中的宏不可嵌套），使用的时候 @ 加宏名，比如 qa。。。q 录制名为 a 的宏，@a 使用这个宏。</p>
<h2 id="执行_shell_命令">执行 shell 命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:!<span class="built_in">command</span></span><br><span class="line">:!ls    <span class="comment"># 列出当前目录下文件</span></span><br><span class="line">:!perl -c script.pl    <span class="comment"># 检查 perl 脚本语法，可以不用退出 vim ，非常方便</span></span><br><span class="line">:!perl script.pl    <span class="comment"># 执行 perl 脚本，可以不用退出 vim ，非常方便</span></span><br><span class="line">:<span class="built_in">suspend</span> or Ctrl + Z    <span class="comment"># 挂起 vim，回到 shell ，按 fg 可以返回 vim</span></span><br></pre></td></tr></table></figure>
<h2 id="注释命令">注释命令</h2><p>perl 程序中 # 开始的行为注释，所以要注释某些行，只需在行首加入 # 。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span>,<span class="number">5</span> s/^/<span class="comment">#/g    # 注释第 3-5 行</span></span><br><span class="line"><span class="number">3</span>,<span class="number">5</span> s/^<span class="comment">#//g    # 解除 3-5 行的注释</span></span><br><span class="line"><span class="number">1</span>,$ s/^/<span class="comment">#/g    # 注释整个文档</span></span><br><span class="line">:%s/^/<span class="comment">#/g    # 注释整个文档，此法更快</span></span><br></pre></td></tr></table></figure>
<h2 id="帮助命令">帮助命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">help</span> or F1    <span class="comment"># 显示整个帮助</span></span><br><span class="line">:<span class="built_in">help</span> xxx    <span class="comment"># 显示 xxx 的帮助，比如： :help i , :help CTRL-[ （即 Ctrl + [ 的帮助）</span></span><br><span class="line">:<span class="built_in">help</span> <span class="string">'number'</span>    <span class="comment"># vim 选项的帮助用单引号括起</span></span><br><span class="line">:<span class="built_in">help</span> &lt;Esc&gt;    <span class="comment"># 特殊键的帮助用 &lt;&gt; 扩起</span></span><br><span class="line">:<span class="built_in">help</span> -t    <span class="comment"># vim 启动参数的帮助用 -</span></span><br><span class="line">：<span class="built_in">help</span> i_&lt;Esc&gt;    <span class="comment"># 插入模式下 Esc 的帮助，某个模式下的帮助用 模式_主题 的模式</span></span><br></pre></td></tr></table></figure>
<p>帮助文件中位于 || 之间的内容是超链接，可以用 Ctrl + ] 进入链接，Ctrl + o ( Ctrl + t ) 返回。</p>
<h2 id="其他非编辑命令">其他非编辑命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.    <span class="comment"># 重复前一次命令</span></span><br><span class="line">:<span class="built_in">set</span> ruler?    <span class="comment"># 查看是否设置了 ruler ，在 .vimrc 中，使用 set 命令设制的选项都可以通过这个命令查看</span></span><br><span class="line">:scriptnames    <span class="comment"># 查看 vim 脚本文件的位置，比如 .vimrc 文件，语法文件及 plugin 等</span></span><br><span class="line">:<span class="built_in">set</span> list    <span class="comment"># 显示非打印字符，如 tab ，空格，行尾等。如果 tab 无法显示，请确定用 set lcs=tab:&gt;- 命令设置了 .vimrc 文件，并确保你的文件中的确有 tab ，如果开启了 expendtab ，那么 tab 将被扩展为空格</span></span><br></pre></td></tr></table></figure>
<h2 id="Vim_教程">Vim 教程</h2><p>在 Unix 系统上</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vimtutor</span><br></pre></td></tr></table></figure>
<p>在 Windows 系统上</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">help</span> tutor</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">:syntax    <span class="comment"># 列出已经定义的语法项</span></span><br><span class="line">:syntax clear    <span class="comment"># 清除已定义的语法规则</span></span><br><span class="line">:syntax <span class="keyword">case</span> match    <span class="comment"># 大小写敏感，int 和 Int 将视为不同的语法元素</span></span><br><span class="line">:syntax <span class="keyword">case</span> ignore    <span class="comment"># 大小写无关，int 和 Int 将视为相同的语法元素，并使用同样的配色方案</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="命令历史">命令历史</h2><p>以 : 和 / 开头的命令都有历史纪录，可以首先键入 : 或 / 然后按上下箭头来选择某个历史命令。</p>
<h2 id="启动_vim">启动 vim</h2><p>在命令行窗口中输入以下命令即可</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim    <span class="comment"># 直接启动 vim</span></span><br><span class="line">vim filename    <span class="comment"># 打开 vim 并创建名为 filename 的文件</span></span><br></pre></td></tr></table></figure>
<h2 id="文件命令">文件命令</h2>]]>
    
    </summary>
    
      <category term="unix" scheme="http://zyi.tw/tags/unix/"/>
    
      <category term="vim" scheme="http://zyi.tw/tags/vim/"/>
    
      <category term="windows" scheme="http://zyi.tw/tags/windows/"/>
    
      <category term="Notes" scheme="http://zyi.tw/categories/Notes/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JSON 遍历]]></title>
    <link href="http://zyi.tw/2014/09/19/json-traversal/"/>
    <id>http://zyi.tw/2014/09/19/json-traversal/</id>
    <published>2014-09-19T11:06:11.000Z</published>
    <updated>2015-11-27T08:58:08.998Z</updated>
    <content type="html"><![CDATA[<h2 id="grep">grep</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"><span class="keyword">var</span> filterArray = $.grep( array, <span class="function"><span class="keyword">function</span>(<span class="params"> value </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value &gt; <span class="number">5</span>;   <span class="comment">// 筛选出大于 5 的</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">0</span>; i &lt; filterArray.length; i++ ) &#123;</span><br><span class="line">    alert( filterArray[i] );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( key <span class="keyword">in</span> filterArray ) &#123;</span><br><span class="line">    alert( filterArray[key] );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="each">each</h2><a id="more"></a>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> anObject = &#123;one : <span class="number">1</span>, two : <span class="number">2</span>, three : <span class="number">3</span>&#125;;    <span class="comment">// 对 json 数组 each</span></span><br><span class="line">$.each( anObject, <span class="function"><span class="keyword">function</span>(<span class="params"> name, value </span>) </span>&#123;</span><br><span class="line">    alert( name );</span><br><span class="line">    alert( value );</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> anArray = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>];</span><br><span class="line">$.each (anArray, <span class="function"><span class="keyword">function</span>(<span class="params"> n, value </span>) </span>&#123;</span><br><span class="line">    alert( n );</span><br><span class="line">    alert( value );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="inArray">inArray</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> anArray = [<span class="string">'one'</span>, <span class="string">'two'</span>, <span class="string">'three'</span>];</span><br><span class="line"><span class="keyword">var</span> index = $.inArray( <span class="string">'two'</span>, anArray );</span><br><span class="line">alert( index );    <span class="comment">// 返回该值在数组中的键值，返回 1</span></span><br><span class="line">alert( anArray[index] );    <span class="comment">// value is two</span></span><br></pre></td></tr></table></figure>
<h2 id="map">map</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> strings = [<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'S'</span>, <span class="string">'6'</span>];</span><br><span class="line"><span class="keyword">var</span> values = $.map( strings, <span class="function"><span class="keyword">function</span>(<span class="params"> value </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> result = <span class="keyword">new</span> <span class="built_in">Number</span>( value );</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">isNaN</span>( result ) ? <span class="literal">null</span> : result;    <span class="comment">// isNaN: is Not a Number 的缩写</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( key <span class="keyword">in</span> values ) &#123;</span><br><span class="line">    alert( values[key] );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JSON_对象">JSON 对象</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> json = [&#123; dd : <span class="string">'SB'</span>, AA : <span class="string">'东东'</span>, re1 : <span class="number">123</span> &#125;, &#123; cccc : <span class="string">'dd'</span>, lk : <span class="string">'1qw'</span> &#125;];</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">0</span>, l = json.length; i &lt; l; i++ ) &#123;</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> key <span class="keyword">in</span> json[i] )&#123;</span><br><span class="line">        alert( key + <span class="string">':'</span> + json[i][key] );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123; <span class="string">"name"</span> : <span class="string">"冯娟"</span>, <span class="string">"password"</span> : <span class="string">"123456"</span>, <span class="string">"department"</span> : <span class="string">"技术部"</span>, <span class="string">"sex"</span> : <span class="string">"女"</span>, <span class="string">"old"</span> : <span class="number">30</span> &#125;;</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">var</span> p <span class="keyword">in</span> obj ) &#123;</span><br><span class="line">    str = str + obj[p] + <span class="string">','</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="grep">grep</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>];</span><br><span class="line"><span class="keyword">var</span> filterArray = $.grep( array, <span class="function"><span class="keyword">function</span>(<span class="params"> value </span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> value &gt; <span class="number">5</span>;   <span class="comment">// 筛选出大于 5 的</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">var</span> i = <span class="number">0</span>; i &lt; filterArray.length; i++ ) &#123;</span><br><span class="line">    alert( filterArray[i] );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ( key <span class="keyword">in</span> filterArray ) &#123;</span><br><span class="line">    alert( filterArray[key] );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="each">each</h2>]]>
    
    </summary>
    
      <category term="array" scheme="http://zyi.tw/tags/array/"/>
    
      <category term="json" scheme="http://zyi.tw/tags/json/"/>
    
      <category term="Front-End" scheme="http://zyi.tw/categories/Front-End/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello Hexo !]]></title>
    <link href="http://zyi.tw/2014/03/17/hello-hexo/"/>
    <id>http://zyi.tw/2014/03/17/hello-hexo/</id>
    <published>2014-03-17T08:16:22.000Z</published>
    <updated>2015-11-27T08:07:50.159Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a> ! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><a id="more"></a>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/">Hexo</a> ! This is your very first post. Check <a href="http://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run_server">Run server</h3>]]>
    
    </summary>
    
      <category term="hexo" scheme="http://zyi.tw/tags/hexo/"/>
    
      <category term="Notes" scheme="http://zyi.tw/categories/Notes/"/>
    
  </entry>
  
</feed>
